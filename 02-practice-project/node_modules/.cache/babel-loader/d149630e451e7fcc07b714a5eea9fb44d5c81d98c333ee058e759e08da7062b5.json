{"ast":null,"code":"var _jsxFileName = \"/Users/sonusinghal/Learning/Shammi/React/02-practice-project/src/Components/AddUser.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport classes from \"./AddUser.module.css\";\nimport Card from \"./Card\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddUser = props => {\n  _s();\n  const users = [];\n  const [enteredUserName, setEnteredUserName] = useState(\"\");\n  const [enteredUserAge, setEnteredUserAge] = useState(\"\");\n  let user = {\n    key: Math.random(),\n    name: enteredUserName,\n    age: enteredUserAge\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    if (enteredUserName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n      return;\n    }\n    if (+enteredUserAge < 1) {\n      return;\n    }\n    console.log(enteredUserName, enteredUserAge);\n    users.push(user);\n    console.log(users);\n    setEnteredUserAge(\"\");\n    setEnteredUserName(\"\");\n    props.onSubmitData(users);\n  };\n  const usernameChangeHandler = event => {\n    setEnteredUserName(event.target.value);\n  };\n  const ageChangeHandler = event => {\n    setEnteredUserAge(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.input,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      className: classes.input,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        className: classes['input label'],\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: usernameChangeHandler,\n        className: classes['input input'],\n        id: \"username\",\n        type: \"text\",\n        value: enteredUserName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        className: classes['input label'],\n        children: \"Age (Years)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: ageChangeHandler,\n        className: classes['input input'],\n        id: \"age\",\n        type: \"number\",\n        step: 1,\n        value: enteredUserAge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 12\n  }, this);\n};\n_s(AddUser, \"IbpRcy+dF+5uP17+nR2yMVR7rlQ=\");\n_c = AddUser;\nexport default AddUser;\nvar _c;\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["useState","classes","Card","Button","jsxDEV","_jsxDEV","AddUser","props","_s","users","enteredUserName","setEnteredUserName","enteredUserAge","setEnteredUserAge","user","key","Math","random","name","age","submitHandler","event","preventDefault","trim","length","console","log","push","onSubmitData","usernameChangeHandler","target","value","ageChangeHandler","className","input","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","type","step","_c","$RefreshReg$"],"sources":["/Users/sonusinghal/Learning/Shammi/React/02-practice-project/src/Components/AddUser.js"],"sourcesContent":["import {useState} from \"react\";\nimport classes from \"./AddUser.module.css\";\nimport Card from \"./Card\";\nimport Button from \"./Button\";\n\n\n\n\nconst AddUser = (props) => {\n\n    const users=[];\n\n  const [enteredUserName, setEnteredUserName] = useState(\"\");\n  const [enteredUserAge, setEnteredUserAge] = useState(\"\");\n  let user = {\n    key: Math.random(),\n    name: enteredUserName,\n    age: enteredUserAge\n}\n\n    const submitHandler = (event)=>{\n        event.preventDefault();\n        if(enteredUserName.trim().length === 0 || enteredUserAge.trim().length === 0 ){\n            return;\n        }\n        if(+enteredUserAge < 1){\n            return\n        }\n        console.log(enteredUserName, enteredUserAge)\n        users.push(user);\n        console.log(users)\n        setEnteredUserAge(\"\");\n        setEnteredUserName(\"\");\n        props.onSubmitData(users)\n    }\n\n    const usernameChangeHandler = (event) =>{\n        setEnteredUserName(event.target.value)\n    \n    }\n    const ageChangeHandler = (event) =>{\n        setEnteredUserAge(event.target.value)\n    }\n\n\n    return <Card className={classes.input}>\n        <form onSubmit={submitHandler} className={classes.input}>\n            <label htmlFor=\"username\" className={classes['input label']}>Username</label>\n            <input onChange={usernameChangeHandler} className={classes['input input']} id=\"username\" type=\"text\" value={enteredUserName}></input>\n            <label htmlFor=\"age\" className={classes['input label']}>Age (Years)</label>\n            <input onChange={ageChangeHandler} className={classes['input input']} id=\"age\" type=\"number\" step={1} value={enteredUserAge}></input>\n            <Button type=\"submit\">Add User</Button>\n        </form>\n       \n    </Card>\n\n}\n\nexport default AddUser;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}