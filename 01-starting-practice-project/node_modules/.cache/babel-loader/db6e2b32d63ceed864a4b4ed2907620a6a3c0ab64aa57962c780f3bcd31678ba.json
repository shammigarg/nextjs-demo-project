{"ast":null,"code":"var _jsxFileName = \"/Users/sonusinghal/Learning/Shammi/React/01-practice-project/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Header from \"./Components/Header\";\nimport UserInputForm from \"./Components/UserInputForm\";\nimport Table from \"./Components/Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userInput, setUserInput] = useState(null);\n  const calculateHandler = userInput => {\n    setUserInput(userInput);\n  };\n  const yearlyData = []; // per-year results\n\n  let currentSavings = +userInput['current-savings'];\n  const yearlyContribution = +userInput['yearly-contribution'];\n  const expectedReturn = +userInput['expected-return'] / 100;\n  const duration = +userInput['duration'];\n\n  // The below code calculates yearly results (total savings, interest etc)\n  for (let i = 0; i < duration; i++) {\n    const yearlyInterest = currentSavings * expectedReturn;\n    currentSavings += yearlyInterest + yearlyContribution;\n    yearlyData.push({\n      // feel free to change the shape of the data pushed to the array!\n      year: i + 1,\n      yearlyInterest: yearlyInterest,\n      savingsEndOfYear: currentSavings,\n      yearlyContribution: yearlyContribution\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserInputForm, {\n      onCalculate: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nCOotz9vTgzH/m310d2/03oFEtk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","UserInputForm","Table","jsxDEV","_jsxDEV","App","_s","userInput","setUserInput","calculateHandler","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","onCalculate","_c","$RefreshReg$"],"sources":["/Users/sonusinghal/Learning/Shammi/React/01-practice-project/src/App.js"],"sourcesContent":["import {useState} from \"react\";\n\nimport Header from \"./Components/Header\";\n\nimport UserInputForm from \"./Components/UserInputForm\";\n\nimport Table from \"./Components/Table\";\n\nfunction App() {\n\n  const [userInput, setUserInput] = useState(null)\n\n  const calculateHandler = (userInput) => {\n    setUserInput(userInput)\n  };\n\n  const yearlyData = []; // per-year results\n\n  let currentSavings = +userInput['current-savings']; \n  const yearlyContribution = +userInput['yearly-contribution']; \n  const expectedReturn = +userInput['expected-return'] / 100;\n  const duration = +userInput['duration'];\n\n  // The below code calculates yearly results (total savings, interest etc)\n  for (let i = 0; i < duration; i++) {\n    const yearlyInterest = currentSavings * expectedReturn;\n    currentSavings += yearlyInterest + yearlyContribution;\n    yearlyData.push({\n      // feel free to change the shape of the data pushed to the array!\n      year: i + 1,\n      yearlyInterest: yearlyInterest,\n      savingsEndOfYear: currentSavings,\n      yearlyContribution: yearlyContribution,\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <UserInputForm onCalculate={calculateHandler}/>\n      <Table/>\n      {/* <form className=\"form\">\n        <div className=\"input-group\">\n          <p>\n            <label htmlFor=\"current-savings\">Current Savings ($)</label>\n            <input type=\"number\" id=\"current-savings\" />\n          </p>\n          <p>\n            <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\n            <input type=\"number\" id=\"yearly-contribution\" />\n          </p>\n        </div>\n        <div className=\"input-group\">\n          <p>\n            <label htmlFor=\"expected-return\">\n              Expected Interest (%, per year)\n            </label>\n            <input type=\"number\" id=\"expected-return\" />\n          </p>\n          <p>\n            <label htmlFor=\"duration\">Investment Duration (years)</label>\n            <input type=\"number\" id=\"duration\" />\n          </p>\n        </div>\n        <p className=\"actions\">\n          <button type=\"reset\" className=\"buttonAlt\">\n            Reset\n          </button>\n          <button type=\"submit\" className=\"button\">\n            Calculate\n          </button>\n        </p>\n      </form> */}\n\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n\n     \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,OAAOC,MAAM,MAAM,qBAAqB;AAExC,OAAOC,aAAa,MAAM,4BAA4B;AAEtD,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMU,gBAAgB,GAAIF,SAAS,IAAK;IACtCC,YAAY,CAACD,SAAS,CAAC;EACzB,CAAC;EAED,MAAMG,UAAU,GAAG,EAAE,CAAC,CAAC;;EAEvB,IAAIC,cAAc,GAAG,CAACJ,SAAS,CAAC,iBAAiB,CAAC;EAClD,MAAMK,kBAAkB,GAAG,CAACL,SAAS,CAAC,qBAAqB,CAAC;EAC5D,MAAMM,cAAc,GAAG,CAACN,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;EAC1D,MAAMO,QAAQ,GAAG,CAACP,SAAS,CAAC,UAAU,CAAC;;EAEvC;EACA,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;IACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;IACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;IACrDF,UAAU,CAACO,IAAI,CAAC;MACd;MACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;MACXC,cAAc,EAAEA,cAAc;MAC9BG,gBAAgB,EAAER,cAAc;MAChCC,kBAAkB,EAAEA;IACtB,CAAC,CAAC;EACJ;EAEA,oBACER,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACJ,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVpB,OAAA,CAACH,aAAa;MAACwB,WAAW,EAAEhB;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/CpB,OAAA,CAACF,KAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAsCL,CAAC;AAEV;AAAClB,EAAA,CAxEQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA0EZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}