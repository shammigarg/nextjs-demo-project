{"ast":null,"code":"var _jsxFileName = \"/Users/sonusinghal/Learning/Shammi/React/12-adv-react-router-starting-project/frontend/src/pages/Events.js\";\nimport { useLoaderData, json, defer } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  //  const data = useLoaderData();\n  //  const events = data.events;\n  // return (\n  //   <>\n  //     {<EventsList events={events} />}\n  //   </>\n  // );\n  const {\n    events\n  } = useLoaderData;\n  return /*#__PURE__*/_jsxDEV(Await, {\n    response: events,\n    children: loadedEvents => {}\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return {isError: true, message: \"Could not fetch the data\"}\n    // throw new Response (JSON.stringify({message: \"Could not fetch the data\"}), {\n    //   status : 500})\n    throw json({\n      message: \"Could not fetch the data\"\n    }, {\n      status: 500\n    });\n  }\n  return response;\n}\nexport async function loader() {\n  defer({\n    events: loadEvents()\n  });\n}\n\n// import { Link } from \"react-router-dom\";\n\n// const DUMMY_EVENTS = [\n//     {id: \"e1\", title: \"Event-1\"},\n//     {id: \"e2\", title: \"Event-2\"},\n//     {id: \"e3\", title: \"Event-3\"},\n//     {id: \"e4\", title: \"Event-4\"},\n//     {id: \"e5\", title: \"Event-5\"},\n\n// ]\n\n// function EventsPage (){\n//     return <>\n//     <h1> Events Page </h1>\n//     <ul>\n//         {DUMMY_EVENTS.map(event => \n//         <li key={event.id}>\n//             <Link to={event.id}>{event.title}</Link>\n//         </li>)}\n//     </ul>\n//     </>\n\n// }\n\n// export default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","EventsList","jsxDEV","_jsxDEV","EventsPage","events","Await","response","children","loadedEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/sonusinghal/Learning/Shammi/React/12-adv-react-router-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["\nimport { useLoaderData, json, defer} from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n  //  const data = useLoaderData();\n  //  const events = data.events;\n  // return (\n  //   <>\n  //     {<EventsList events={events} />}\n  //   </>\n  // );\n  const {events} = useLoaderData;\n  return <Await response={events}>\n    {(loadedEvents) => {\n\n    }}\n  </Await>\n}\n\n\nexport default EventsPage;\n\nasync function loadEvents(){\n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {\n    // return {isError: true, message: \"Could not fetch the data\"}\n    // throw new Response (JSON.stringify({message: \"Could not fetch the data\"}), {\n    //   status : 500})\n    throw json({message: \"Could not fetch the data\"}, {status: 500})\n\n  } \n    return response;\n\n}\n\nexport async function loader(){\n    defer({\n      events: loadEvents()\n    })\n\n}\n\n\n\n// import { Link } from \"react-router-dom\";\n\n// const DUMMY_EVENTS = [\n//     {id: \"e1\", title: \"Event-1\"},\n//     {id: \"e2\", title: \"Event-2\"},\n//     {id: \"e3\", title: \"Event-3\"},\n//     {id: \"e4\", title: \"Event-4\"},\n//     {id: \"e5\", title: \"Event-5\"},\n\n// ]\n\n// function EventsPage (){\n//     return <>\n//     <h1> Events Page </h1>\n//     <ul>\n//         {DUMMY_EVENTS.map(event => \n//         <li key={event.id}>\n//             <Link to={event.id}>{event.title}</Link>\n//         </li>)}\n//     </ul>\n//     </>\n    \n\n// }\n\n// export default EventsPage;"],"mappings":";AACA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,QAAO,kBAAkB;AAC5D,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EACpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM;IAACC;EAAM,CAAC,GAAGP,aAAa;EAC9B,oBAAOK,OAAA,CAACG,KAAK;IAACC,QAAQ,EAAEF,MAAO;IAAAG,QAAA,EAC3BC,YAAY,IAAK,CAEnB;EAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AACV;AAACC,EAAA,GAdQV,UAAU;AAiBnB,eAAeA,UAAU;AAEzB,eAAeW,UAAUA,CAAA,EAAE;EACzB,MAAMR,QAAQ,GAAG,MAAMS,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACT,QAAQ,CAACU,EAAE,EAAE;IAChB;IACA;IACA;IACA,MAAMlB,IAAI,CAAC;MAACmB,OAAO,EAAE;IAA0B,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAElE;EACE,OAAOZ,QAAQ;AAEnB;AAEA,OAAO,eAAea,MAAMA,CAAA,EAAE;EAC1BpB,KAAK,CAAC;IACJK,MAAM,EAAEU,UAAU,CAAC;EACrB,CAAC,CAAC;AAEN;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AAAA,IAAAD,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}