{"ast":null,"code":"var _jsxFileName = \"/Users/sonusinghal/Learning/Shammi/React/12-adv-react-router-starting-project/frontend/src/NewEvent.js\";\nimport EventForm from \"./components/EventForm\";\nimport { json, redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"Could not send data to server\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","json","redirect","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["/Users/sonusinghal/Learning/Shammi/React/12-adv-react-router-starting-project/frontend/src/NewEvent.js"],"sourcesContent":["import EventForm from \"./components/EventForm\";\nimport { json, redirect } from \"react-router-dom\";\n\nfunction NewEventPage (){\n    return <EventForm/>\n}\n\nexport default NewEventPage;\n\n\nexport  async function action({request,params}){\n    const data = await request.formData();\n    const eventData = {\n        title: data.get(\"title\"),\n        image: data.get(\"image\"),\n        date: data.get(\"date\"),\n        description: data.get(\"description\"),\n    }\n\n    const response = await fetch(\"http://localhost:8080/events\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(eventData)\n    })\n\n    if (response.status === 422){\n        return response;\n    }\n\n    if (!response.ok){\n        throw json({message: \"Could not send data to server\"}, {status: 500})\n    } \n    return redirect(\"/events\");\n}\n\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,YAAYA,CAAA,EAAG;EACpB,oBAAOD,OAAA,CAACJ,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACvB;AAACC,EAAA,GAFQL,YAAY;AAIrB,eAAeA,YAAY;AAG3B,OAAQ,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAC;EAC3C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAIM,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;IACxB,OAAOP,QAAQ;EACnB;EAEA,IAAI,CAACA,QAAQ,CAACQ,EAAE,EAAC;IACb,MAAM7B,IAAI,CAAC;MAAC8B,OAAO,EAAE;IAA+B,CAAC,EAAE;MAACF,MAAM,EAAE;IAAG,CAAC,CAAC;EACzE;EACA,OAAO3B,QAAQ,CAAC,SAAS,CAAC;AAC9B;AAAC,IAAAQ,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}