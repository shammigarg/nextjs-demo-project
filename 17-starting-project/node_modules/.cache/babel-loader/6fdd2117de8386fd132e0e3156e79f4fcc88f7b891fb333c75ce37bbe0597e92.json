{"ast":null,"code":"var _jsxFileName = \"/Users/sonusinghal/Learning/Shammi/React/17-starting-project/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    reset: resetNameInput,\n    valueIsValid: enteredNameIsValid,\n    hasError: nameInputhasError,\n    enteredValueHandler: nameInputValueHandler,\n    InputBlurHandler: nameInputBlurHandler\n  } = useInput(value => {\n    return value.trim() !== \"\";\n  });\n  const {\n    value: enteredEmail,\n    reset: resetEmailInput,\n    valueIsValid: enteredEmailIsValid,\n    hasError: emailInputhasError,\n    enteredValueHandler: emailInputValueHandler,\n    InputBlurHandler: emailInputBlurHandler\n  } = useInput(value => {\n    return value.includes('@' && '.com');\n  });\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    resetNameInput();\n    resetEmailInput();\n  };\n  const nameInputClasses = nameInputhasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputhasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: enteredName,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputValueHandler,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), nameInputhasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter valid Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \" Your Email \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: enteredEmail,\n        onChange: emailInputValueHandler,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"hLHoV+Z38c/4GwsxfPdoU4kMgQc=\", false, function () {\n  return [useInput, useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","reset","resetNameInput","valueIsValid","enteredNameIsValid","hasError","nameInputhasError","enteredValueHandler","nameInputValueHandler","InputBlurHandler","nameInputBlurHandler","trim","enteredEmail","resetEmailInput","enteredEmailIsValid","emailInputhasError","emailInputValueHandler","emailInputBlurHandler","includes","formIsValid","formSubmitHandler","event","preventDefault","console","log","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","emailInputIsInvalid","disabled","_c","$RefreshReg$"],"sources":["/Users/sonusinghal/Learning/Shammi/React/17-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\n\nconst SimpleInput = (props) => {\n\n  const { value: enteredName,\n    reset: resetNameInput,\n    valueIsValid: enteredNameIsValid,\n    hasError: nameInputhasError,\n    enteredValueHandler: nameInputValueHandler,\n    InputBlurHandler: nameInputBlurHandler } = useInput(value => {\n      return value.trim() !== \"\";\n    })\n\n\n  const { value: enteredEmail,\n    reset: resetEmailInput,\n    valueIsValid: enteredEmailIsValid,\n    hasError: emailInputhasError,\n    enteredValueHandler: emailInputValueHandler,\n    InputBlurHandler: emailInputBlurHandler } = useInput(value => {\n      return value.includes('@' && '.com');\n    })\n\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName)\n\n    resetNameInput();\n    resetEmailInput()\n\n  }\n\n  const nameInputClasses = nameInputhasError ? \"form-control invalid\" : \"form-control\"\n  const emailInputClasses = emailInputhasError ? \"form-control invalid\" : \"form-control\"\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input value={enteredName}\n          type='text' id='name' onChange={nameInputValueHandler}\n          onBlur={nameInputBlurHandler} />\n        {nameInputhasError && <p className=\"error-text\">Please enter valid Input</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\"> Your Email </label>\n        <input type=\"email\" id=\"email\"\n          value={enteredEmail}\n          onChange={emailInputValueHandler}\n          onBlur={emailInputBlurHandler} />\n        {emailInputIsInvalid && <p className=\"error-text\">Please enter valid email</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}