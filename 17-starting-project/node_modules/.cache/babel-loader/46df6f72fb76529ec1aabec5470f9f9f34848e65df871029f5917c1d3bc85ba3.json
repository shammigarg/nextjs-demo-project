{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nconst initialInputState = {\n  value: \"\",\n  isTouched: false\n};\nconst inputStateReducer = (state, action) => {\n  if (action.type === \"INPUT\") {\n    return {\n      value: action.value,\n      isTouched: state.isTouched\n    };\n  }\n  if (action.type === \"BLUR\") {\n    return {\n      isTouched: true,\n      value: state.value\n    };\n  }\n  if (action.type === \"RESET\") {\n    return {\n      isTouched: false,\n      value: \"\"\n    };\n  }\n  return inputStateReducer;\n};\nconst useInput = validateValue => {\n  _s();\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const enteredValueIsValid = validateValue(inputState.value);\n  const hasError = !enteredValueIsValid && inputState.isTouched;\n  const inputValueChangeHandler = event => {\n    dispatch({\n      type: \"INPUT\",\n      value: event.target.value\n    });\n  };\n  const inputBlurHandler = () => {\n    dispatch({\n      type: \"BLUR\"\n    });\n  };\n  const reset = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n  return {\n    value: enteredValue,\n    hasError,\n    isValid: enteredValueIsValid,\n    inputValueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\nexport default useInput;\n\n// without using useReducer()\n\n// import { useState } from \"react\"\n\n// const useInput = (validateValue) => {\n\n//   const [enteredValue, setEnteredValue] = useState('');\n//   const [isTouched, setIsTouched] = useState(false);\n\n//   const enteredValueIsValid = validateValue(enteredValue)\n//   const hasError = !enteredValueIsValid  && isTouched;\n\n//   const inputValueChangeHandler = event => {\n//     setEnteredValue(event.target.value)\n//   } \n\n//   const inputBlurHandler = () => {\n//      setIsTouched(true);\n//   }\n\n//   const reset = ()=>{\n//     setEnteredValue('');\n//     setIsTouched(false);\n//   }\n\n//   return{\n//     value: enteredValue,\n//     hasError,\n//     isValid: enteredValueIsValid,\n//     inputValueChangeHandler,\n//     inputBlurHandler,\n//     reset,\n//   }\n\n// }\n\n// export default useInput;","map":{"version":3,"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","type","useInput","validateValue","_s","inputState","dispatch","enteredValueIsValid","hasError","inputValueChangeHandler","event","target","inputBlurHandler","reset","enteredValue","isValid"],"sources":["/Users/sonusinghal/Learning/Shammi/React/17-starting-project/src/hooks/use-input1.js"],"sourcesContent":["import { useReducer } from \"react\"\n\nconst initialInputState = {\n    value: \"\",\n    isTouched: false,\n}\n\nconst inputStateReducer = (state, action)=>{\n    if(action.type === \"INPUT\"){\n        return { value: action.value, isTouched: state.isTouched}\n    }\n\n    if(action.type === \"BLUR\"){\n        return {isTouched: true, value: state.value}\n    }\n\n    if(action.type === \"RESET\"){\n        return {isTouched: false, value:\"\"}\n    }\n\n\n    return inputStateReducer;\n\n}\n\nconst useInput = (validateValue) => {\n\n  const [inputState, dispatch] =  useReducer(inputStateReducer , initialInputState)\n\n  const enteredValueIsValid = validateValue(inputState.value)\n  const hasError = !enteredValueIsValid  && inputState.isTouched;\n\n\n  const inputValueChangeHandler = event => {\n\n    dispatch({type:\"INPUT\", value:event.target.value})\n\n  } \n\n  const inputBlurHandler = () => {\n    dispatch({type: \"BLUR\"})\n  }\n\n  const reset = ()=>{\n    dispatch({type: \"RESET\"})\n  }\n   \n\n  return{\n    value: enteredValue,\n    hasError,\n    isValid: enteredValueIsValid,\n    inputValueChangeHandler,\n    inputBlurHandler,\n    reset,\n  }\n\n}\n\nexport default useInput;\n\n\n// without using useReducer()\n\n// import { useState } from \"react\"\n\n// const useInput = (validateValue) => {\n\n//   const [enteredValue, setEnteredValue] = useState('');\n//   const [isTouched, setIsTouched] = useState(false);\n\n//   const enteredValueIsValid = validateValue(enteredValue)\n//   const hasError = !enteredValueIsValid  && isTouched;\n\n\n//   const inputValueChangeHandler = event => {\n//     setEnteredValue(event.target.value)\n//   } \n\n//   const inputBlurHandler = () => {\n//      setIsTouched(true);\n//   }\n\n//   const reset = ()=>{\n//     setEnteredValue('');\n//     setIsTouched(false);\n//   }\n   \n\n//   return{\n//     value: enteredValue,\n//     hasError,\n//     isValid: enteredValueIsValid,\n//     inputValueChangeHandler,\n//     inputBlurHandler,\n//     reset,\n//   }\n\n// }\n\n// export default useInput;\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,MAAMC,iBAAiB,GAAG;EACtBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAG;EACvC,IAAGA,MAAM,CAACC,IAAI,KAAK,OAAO,EAAC;IACvB,OAAO;MAAEL,KAAK,EAAEI,MAAM,CAACJ,KAAK;MAAEC,SAAS,EAAEE,KAAK,CAACF;IAAS,CAAC;EAC7D;EAEA,IAAGG,MAAM,CAACC,IAAI,KAAK,MAAM,EAAC;IACtB,OAAO;MAACJ,SAAS,EAAE,IAAI;MAAED,KAAK,EAAEG,KAAK,CAACH;IAAK,CAAC;EAChD;EAEA,IAAGI,MAAM,CAACC,IAAI,KAAK,OAAO,EAAC;IACvB,OAAO;MAACJ,SAAS,EAAE,KAAK;MAAED,KAAK,EAAC;IAAE,CAAC;EACvC;EAGA,OAAOE,iBAAiB;AAE5B,CAAC;AAED,MAAMI,QAAQ,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAElC,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAIZ,UAAU,CAACI,iBAAiB,EAAGH,iBAAiB,CAAC;EAEjF,MAAMY,mBAAmB,GAAGJ,aAAa,CAACE,UAAU,CAACT,KAAK,CAAC;EAC3D,MAAMY,QAAQ,GAAG,CAACD,mBAAmB,IAAKF,UAAU,CAACR,SAAS;EAG9D,MAAMY,uBAAuB,GAAGC,KAAK,IAAI;IAEvCJ,QAAQ,CAAC;MAACL,IAAI,EAAC,OAAO;MAAEL,KAAK,EAACc,KAAK,CAACC,MAAM,CAACf;IAAK,CAAC,CAAC;EAEpD,CAAC;EAED,MAAMgB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BN,QAAQ,CAAC;MAACL,IAAI,EAAE;IAAM,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMY,KAAK,GAAGA,CAAA,KAAI;IAChBP,QAAQ,CAAC;MAACL,IAAI,EAAE;IAAO,CAAC,CAAC;EAC3B,CAAC;EAGD,OAAM;IACJL,KAAK,EAAEkB,YAAY;IACnBN,QAAQ;IACRO,OAAO,EAAER,mBAAmB;IAC5BE,uBAAuB;IACvBG,gBAAgB;IAChBC;EACF,CAAC;AAEH,CAAC;AAAAT,EAAA,CAhCKF,QAAQ;AAkCd,eAAeA,QAAQ;;AAGvB;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}