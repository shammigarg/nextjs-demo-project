{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nlet initialInputState = {\n  value: \"\",\n  isTouched: false\n};\nconst inputStateReducer = (state, action) => {\n  return;\n};\nconst useInput = validateValue => {\n  _s();\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const enteredValueIsValid = validateValue(enteredValue);\n  const hasError = !enteredValueIsValid && isTouched;\n  const inputValueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n  const inputBlurHandler = () => {\n    setIsTouched(true);\n  };\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n  return {\n    value: enteredValue,\n    hasError,\n    isValid: enteredValueIsValid,\n    inputValueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"hgiNJ+prcjLHg29Ws+cYFsKWyxg=\");\nexport default useInput;","map":{"version":3,"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","useInput","validateValue","_s","inputState","dispatch","enteredValue","setEnteredValue","useState","setIsTouched","enteredValueIsValid","hasError","inputValueChangeHandler","event","target","inputBlurHandler","reset","isValid"],"sources":["/Users/sonusinghal/Learning/Shammi/React/17-starting-project/src/hooks/use-input1.js"],"sourcesContent":["import { useReducer } from \"react\"\n\nlet initialInputState = {\n    value: \"\",\n    isTouched: false, \n\n}\n\nconst inputStateReducer = (state, action) => {\n    return \n}\n\nconst useInput = (validateValue) => {\n\n  const [inputState, dispatch] =  useReducer(inputStateReducer, initialInputState)\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n\n  const enteredValueIsValid = validateValue(enteredValue) ;\n  const hasError = !enteredValueIsValid && isTouched;\n\n\n  const inputValueChangeHandler = event => {\n    setEnteredValue(event.target.value)\n  } \n\n  const inputBlurHandler = () => {\n     setIsTouched(true);\n  }\n\n  const reset = ()=>{\n    setEnteredValue('');\n    setIsTouched(false);\n  }\n   \n\n  return{\n    value: enteredValue,\n    hasError,\n    isValid: enteredValueIsValid,\n    inputValueChangeHandler,\n    inputBlurHandler,\n    reset,\n  }\n\n}\n\nexport default useInput;\n\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,IAAIC,iBAAiB,GAAG;EACpBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AAEf,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACzC;AACJ,CAAC;AAED,MAAMC,QAAQ,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAElC,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAIX,UAAU,CAACI,iBAAiB,EAAEH,iBAAiB,CAAC;EAChF,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACX,SAAS,EAAEY,YAAY,CAAC,GAAGD,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAME,mBAAmB,GAAGR,aAAa,CAACI,YAAY,CAAC;EACvD,MAAMK,QAAQ,GAAG,CAACD,mBAAmB,IAAIb,SAAS;EAGlD,MAAMe,uBAAuB,GAAGC,KAAK,IAAI;IACvCN,eAAe,CAACM,KAAK,CAACC,MAAM,CAAClB,KAAK,CAAC;EACrC,CAAC;EAED,MAAMmB,gBAAgB,GAAGA,CAAA,KAAM;IAC5BN,YAAY,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMO,KAAK,GAAGA,CAAA,KAAI;IAChBT,eAAe,CAAC,EAAE,CAAC;IACnBE,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAGD,OAAM;IACJb,KAAK,EAAEU,YAAY;IACnBK,QAAQ;IACRM,OAAO,EAAEP,mBAAmB;IAC5BE,uBAAuB;IACvBG,gBAAgB;IAChBC;EACF,CAAC;AAEH,CAAC;AAAAb,EAAA,CAjCKF,QAAQ;AAmCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}