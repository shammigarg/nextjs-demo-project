{"ast":null,"code":"var _jsxFileName = \"/Users/sonusinghal/Learning/Shammi/React/15-Sending_Http_Requests/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n  async function fetchMoviesListHandler() {\n    setIsLoading(true);\n    const response = await fetch(\"https://swapi.py4e.com/api/films\");\n    const responseData = await response.json();\n    const transformedMovies = responseData.results.map(movie => {\n      return {\n        id: movie.episode_id,\n        title: movie.title,\n        releaseDate: movie.release_date,\n        openingText: movie.opening_crawl\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesListHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 45\n      }, this), !isLoading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No movie data found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 47\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Loading ...please wait\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K6Fmynn3O5MwYfimS2e7LgCybds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","MoviesList","useState","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","fetchMoviesListHandler","response","fetch","responseData","json","transformedMovies","results","map","movie","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/sonusinghal/Learning/Shammi/React/15-Sending_Http_Requests/src/App.js"],"sourcesContent":["import React from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [movies, setMovies] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n  \n    async function fetchMoviesListHandler(){\n      setIsLoading(true);\n    const response = await fetch(\"https://swapi.py4e.com/api/films\");\n    const responseData = await response.json();\n  \n      const transformedMovies = responseData.results.map((movie) => {\n        return { id : movie.episode_id,\n        title : movie.title,\n        releaseDate : movie.release_date,\n        openingText : movie.opening_crawl }\n      })\n      setMovies(transformedMovies);\n      setIsLoading(false)\n      \n     } \n\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesListHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading &&  movies.length >0 && <MoviesList movies={movies} />}\n\n        {!isLoading && movies.length === 0 && <p> No movie data found</p>}\n        \n        {isLoading && <p> Loading ...please wait</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,eAAeS,sBAAsBA,CAAA,EAAE;IACrCD,YAAY,CAAC,IAAI,CAAC;IACpB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;IAChE,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAExC,MAAMC,iBAAiB,GAAGF,YAAY,CAACG,OAAO,CAACC,GAAG,CAAEC,KAAK,IAAK;MAC5D,OAAO;QAAEC,EAAE,EAAGD,KAAK,CAACE,UAAU;QAC9BC,KAAK,EAAGH,KAAK,CAACG,KAAK;QACnBC,WAAW,EAAGJ,KAAK,CAACK,YAAY;QAChCC,WAAW,EAAGN,KAAK,CAACO;MAAc,CAAC;IACrC,CAAC,CAAC;IACFlB,SAAS,CAACQ,iBAAiB,CAAC;IAC5BN,YAAY,CAAC,KAAK,CAAC;EAEpB;EAGH,oBACEN,OAAA,CAACJ,KAAK,CAAC2B,QAAQ;IAAAC,QAAA,gBACbxB,OAAA;MAAAwB,QAAA,eACExB,OAAA;QAAQyB,OAAO,EAAElB,sBAAuB;QAAAiB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eACV7B,OAAA;MAAAwB,QAAA,GACG,CAACnB,SAAS,IAAKF,MAAM,CAAC2B,MAAM,GAAE,CAAC,iBAAI9B,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEA;MAAO;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEjE,CAACxB,SAAS,IAAIF,MAAM,CAAC2B,MAAM,KAAK,CAAC,iBAAI9B,OAAA;QAAAwB,QAAA,EAAG;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAEhExB,SAAS,iBAAIL,OAAA;QAAAwB,QAAA,EAAG;MAAuB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAAC3B,EAAA,CAjDQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}