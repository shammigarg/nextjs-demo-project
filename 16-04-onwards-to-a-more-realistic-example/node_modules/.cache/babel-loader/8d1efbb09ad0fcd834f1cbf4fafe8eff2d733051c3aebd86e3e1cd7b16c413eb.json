{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nconst useHttpRequest = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n      console.log(data);\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n_s(useHttpRequest, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\nexport default useHttpRequest;","map":{"version":3,"names":["useState","useCallback","useHttpRequest","_s","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","applyData","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","err","message"],"sources":["/Users/sonusinghal/Learning/Shammi/React/16-04-onwards-to-a-more-realistic-example/src/hooks/use-httpRequest.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nconst useHttpRequest = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n\n    const sendRequest = useCallback(async (requestConfig, applyData) => {\n\n        setIsLoading(true);\n\n        setError(null);\n        try {\n            const response = await fetch(requestConfig.url,{\n                method: requestConfig.method ? requestConfig.method : 'GET',\n                headers: requestConfig.headers ? requestConfig.headers : {},\n                body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n            }\n\n            );\n\n            if (!response.ok) {\n                throw new Error('Request failed!');\n            }\n\n\n            const data = await response.json();\n\n            console.log(data)\n\n            applyData(data);\n\n        } catch (err) {\n            setError(err.message || 'Something went wrong!');\n        }\n        setIsLoading(false);\n    }, []);\n\n\n    return {\n        isLoading,\n        error,\n        sendRequest\n\n    };\n\n\n}\n\nexport default useHttpRequest;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAGxC,MAAMQ,WAAW,GAAGP,WAAW,CAAC,OAAOQ,aAAa,EAAEC,SAAS,KAAK;IAEhEL,YAAY,CAAC,IAAI,CAAC;IAElBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,aAAa,CAACI,GAAG,EAAC;QAC3CC,MAAM,EAAEL,aAAa,CAACK,MAAM,GAAGL,aAAa,CAACK,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEN,aAAa,CAACM,OAAO,GAAGN,aAAa,CAACM,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAEP,aAAa,CAACO,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACT,aAAa,CAACO,IAAI,CAAC,GAAG;MACpE,CAEA,CAAC;MAED,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACtC;MAGA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MAEjBX,SAAS,CAACW,IAAI,CAAC;IAEnB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACVlB,QAAQ,CAACkB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IACpD;IACArB,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAGN,OAAO;IACHD,SAAS;IACTE,KAAK;IACLE;EAEJ,CAAC;AAGL,CAAC;AAAAL,EAAA,CA7CKD,cAAc;AA+CpB,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}