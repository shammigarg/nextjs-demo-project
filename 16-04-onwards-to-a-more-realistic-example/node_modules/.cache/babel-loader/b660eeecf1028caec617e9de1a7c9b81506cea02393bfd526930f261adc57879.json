{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nconst useHttpRequest = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch({\n        url: requestConfig.url,\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.method : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest\n  };\n};\n_s(useHttpRequest, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\nexport default useHttpRequest;","map":{"version":3,"names":["useState","useCallback","useHttpRequest","_s","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","applyData","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["/Users/sonusinghal/Learning/Shammi/React/16-04-onwards-to-a-more-realistic-example/src/hooks/use-httpRequest.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nconst useHttpRequest = ()=>{\nconst [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch( {url: requestConfig.url,\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.method : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null, \n    }\n       \n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      applyData(data)\n\n    \n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }, []);\n\n\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest\n\n  };\n\n\n}\n\nexport default useHttpRequest;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,MAAMC,cAAc,GAAGA,CAAA,KAAI;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAGxC,MAAMQ,WAAW,GAAGP,WAAW,CAAC,OAAOQ,aAAa,EAAEC,SAAS,KAAK;IAClEL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE;QAACC,GAAG,EAAEJ,aAAa,CAACI,GAAG;QACnDC,MAAM,EAAEL,aAAa,CAACK,MAAM,GAAGL,aAAa,CAACK,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEN,aAAa,CAACM,OAAO,GAAGN,aAAa,CAACK,MAAM,GAAG,CAAC,CAAC;QAC1DE,IAAI,EAAEP,aAAa,CAACO,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACT,aAAa,CAACO,IAAI,CAAC,GAAG;MACpE,CAEE,CAAC;MAED,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElCZ,SAAS,CAACW,IAAI,CAAC;IAGjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAnB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAGN,OAAO;IACLD,SAAS,EAAEA,SAAS;IACpBE,KAAK,EAAEA,KAAK;IACZE,WAAW,EAAEA;EAEf,CAAC;AAGH,CAAC;AAAAL,EAAA,CAzCKD,cAAc;AA2CpB,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}