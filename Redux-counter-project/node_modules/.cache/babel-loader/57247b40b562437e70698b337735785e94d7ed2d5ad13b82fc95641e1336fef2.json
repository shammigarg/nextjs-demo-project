{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createStore","createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggle","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","counterActions","actions"],"sources":["/Users/sonusinghal/Learning/Shammi/React/Redux-counter-project/src/store/index.js"],"sourcesContent":["import {createStore} from \"redux\";\nimport {createSlice, configureStore} from '@reduxjs/toolkit'\n\nconst initialCounterState = {counter : 0, showCounter : true}\n\nconst counterSlice = createSlice({\n    name: \"counter\",\n    initialState: initialCounterState,\n    reducers: {\n    increment(state){\n        state.counter++;\n    },\n    decrement(state){\n        state.counter--;\n    },\n    increase(state, action){\n        state.counter = state.counter + action.payload\n    },\n    toggle(state){\n        state.showCounter = !state.showCounter\n    }}\n})\n\nconst initialAuthState = {\n    isAuthenticated : false,\n}\n\nconst authSlice = createSlice({\n\n    name: \"authentication\",\n    initialState: initialAuthState,\n    reducers: {\n        login(state){\n            state.isAuthenticated = true;\n        },\n        logout(state){\n            state.isAuthenticated = false;\n        }\n    }\n\n  })\n\n\nconst store = configureStore({\n    reducer: counterSlice.reducer\n});\n\nexport const counterActions = counterSlice.actions\nexport default store;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC,SAAQC,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAE5D,MAAMC,mBAAmB,GAAG;EAACC,OAAO,EAAG,CAAC;EAAEC,WAAW,EAAG;AAAI,CAAC;AAE7D,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACVC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAC;MACnBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAC;MACTA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAC1C;EAAC;AACL,CAAC,CAAC;AAEF,MAAMY,gBAAgB,GAAG;EACrBC,eAAe,EAAG;AACtB,CAAC;AAED,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EAE1BM,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAES,gBAAgB;EAC9BR,QAAQ,EAAE;IACNW,KAAKA,CAACT,KAAK,EAAC;MACRA,KAAK,CAACO,eAAe,GAAG,IAAI;IAChC,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAC;MACTA,KAAK,CAACO,eAAe,GAAG,KAAK;IACjC;EACJ;AAEF,CAAC,CAAC;AAGJ,MAAMI,KAAK,GAAGpB,cAAc,CAAC;EACzBqB,OAAO,EAAEjB,YAAY,CAACiB;AAC1B,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGlB,YAAY,CAACmB,OAAO;AAClD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}